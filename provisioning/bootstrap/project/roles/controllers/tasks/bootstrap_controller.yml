---
- name: "Wait for the portal to become active"
  uri:
    url: "https://{{ inventory_hostname }}/api/initial-data"
    validate_certs: no
    status_code: 200
  register: result
  until: result.status == 200
  retries: 600
  delay: 10

- name: Refresh in-memory inventory
  meta: refresh_inventory

- name: Prepare Avi credentials
  set_fact:
    avi_credentials: {}

- name: Prepare Avi credentials
  set_fact:
    avi_credentials: "{{ avi_credentials | combine({ item.key: item.value }) }}"
  with_items:
  - { key: 'password', value: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_admin_password'] }}" }
  - { key: 'api_version', value: "{{ result['json']['version']['Version'] }}" }
  - { key: 'controller', value: "{{ avi_creds['controller'] }}" }
  - { key: 'username', value: "{{ avi_creds['username'] }}" }

- name: Update admin user account if required
  avi_useraccount:
    avi_credentials: "{{ avi_credentials }}"
    old_password: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_default_password'] }}"
  ignore_errors: yes

- name: Basic system configuration
  avi_systemconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    welcome_workflow_complete: true
    dns_configuration:
      server_list:
        - addr: "{{ hostvars['jumpbox.pod.lab']['privateIp'] }}"
          type: V4
        - addr: 8.8.4.4
          type: V4
    ntp_configuration:
      ntp_server_list:
        - addr: 0.pool.ntp.org
          type: DNS
        - addr: 1.pool.ntp.org
          type: DNS
        - addr: 2.pool.ntp.org
          type: DNS
        - addr: 3.pool.ntp.org
          type: DNS

- name: Create backup admin account
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: post
    path: user
    data:
      require_password_confirmation: false
      is_active: true
      is_superuser: true
      access:
        - tenant_ref: '/api/tenant?name=admin'
          role_ref: '/api/role?name=System-Admin'
      default_tenant_ref: '/api/tenant?name=admin'
      name: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_backup_admin_username'] }}"
      username: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_backup_admin_username'] }}"
      password: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_backup_admin_password'] }}"

- name: Remove GUI error regarding backup passphrase
  avi_backupconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    name: Backup-Configuration
    backup_passphrase: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_backup_admin_password'] }}"
    upload_to_remote_host: false

- name: Define AWS cloud configuration
  avi_cloud:
    avi_credentials: "{{ avi_credentials }}"
    name: AWS
    vtype: CLOUD_AWS
    aws_configuration:
      use_iam_roles: true
      region: "{{ hostvars['jumpbox.pod.lab']['region'] }}"
      vpc_id: "{{ hostvars['jumpbox.pod.lab']['Lab_vpc_id'] }}"
      zones:
        - availability_zone: "{{ hostvars['jumpbox.pod.lab']['availabilityZone'] }}"
          mgmt_network_name: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_mgmt_net'] }}"
  register: cloud

- name: Build VIP network details
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: get
    path: "networksubnetlist?name={{ item }}&cloud_uuid={{ cloud['obj']['uuid'] }}"
  register: subnet
  with_items:
    - "{{ hostvars['jumpbox.pod.lab']['Lab_avi_app_net'] }}"

- name: Define DNS Virtual Service
  import_role:
    name: avinetworks.aviconfig
  vars:
    avi_credentials: "{{ avi_credentials }}"
    avi_config:
      vsvip:
        - name: vsvip_dns
          cloud_ref: '/api/cloud?name=AWS'
          vip:
            - auto_allocate_ip: true
              subnet_uuid: "{{ subnet['results'][0]['obj']['results'][0]['uuid'] }}"
              auto_allocate_floating_ip: true
      virtualservice:
        - name: "{{ 'vs_dns_' + hostvars['jumpbox.pod.lab']['region'] }}"
          cloud_ref: '/api/cloud?name=AWS'
          application_profile_ref: '/api/applicationprofile?name=System-DNS'
          network_profile_ref: '/api/networkprofile/?name=System-UDP-Per-Pkt'
          services:
            - port: 53
            - port: 53
              override_network_profile_ref: '/api/networkprofile/?name=System-TCP-Proxy'
          vsvip_ref: '/api/vsvip?name=vsvip_dns'

- name: Build VIP network details
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: get
    path: "virtualservice?include_name&services.0.port=53"
  register: dns_vip

- set_fact:
    pod_id: "{{ inventory_hostname | regex_replace('^controller.pod(\\d+).lab', '\\1') }}"
    pod_domain: "{{ inventory_hostname | regex_replace('controller.','') }}"
    dns_vs_ip: "{{ dns_vip['obj']['results'][0]['vip'][0]['ip_address']['addr'] }}"

- lineinfile:
    dest: /etc/dnsmasq.conf
    insertafter: EOF
    line: server=/app.{{ pod_domain }}/{{ dns_vs_ip }}
  delegate_to: localhost
  become: true
- lineinfile:
    dest: /etc/dnsmasq.conf
    insertafter: EOF
    line: server=/global.{{ pod_domain }}/{{ dns_vs_ip }}
  delegate_to: localhost
  become: true

- systemd:
    state: restarted
    name: dnsmasq
  delegate_to: localhost
  become: true

- set_fact:
    k8s_master: "{{ inventory_hostname | regex_replace('controller','master1') }}"

- wait_for:
    host: "{{ k8s_master }}"
    port: 6443
    delay: 10

- debug:
    var: hostvars[k8s_master].avi_token

- name: Patch systemconfiguration with K8S DNS Virtual Service
  avi_systemconfiguration:
    avi_credentials: "{{ avi_credentials }}"
    avi_api_update_method: patch
    avi_api_patch_op: replace
    dns_virtualservice_refs: "/api/virtualservice/?name=vs_dns_{{ hostvars['jumpbox.pod.lab']['region'] }}"

- name: Collect cluster details
  avi_api_session:
    avi_credentials: "{{ avi_credentials }}"
    http_method: get
    path: cluster
  register: cluster

- name: Define GSLB Cluster
  import_role:
    name: avinetworks.aviconfig
  vars:
    avi_credentials: "{{ avi_credentials }}"
    avi_config:
      gslb:
        - name: Default
          is_federated: true
          sites:
            - username: "{{ avi_credentials.username }}"
              name: "{{ inventory_hostname }}"
              ip_addresses:
                - type: V4
                  addr: "{{ hostvars[avi_credentials.controller]['privateIp'] }}"
              enabled: true
              member_type: GSLB_ACTIVE_MEMBER
              cluster_uuid: "{{ cluster['obj'].uuid }}"
              dns_vses:
                - dns_vs_uuid: "{{ dns_vip['obj']['results'][0]['uuid'] }}"
              hm_shard_enabled: false
              password: "{{ avi_credentials.password }}"
              port: 443
          dns_configs:
            - domain_name: "global.{{ pod_domain }}"
          leader_cluster_uuid: "{{ cluster['obj'].uuid }}"