---
- file:
    path: /etc/resolv.conf
    state: absent
- template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
- shell: kubeadm config view
  register: kubeadm_config
  ignore_errors: yes
  changed_when: "kubeadm_config.rc != 0"
- block:
  - apt_key:
      url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
      id: "0x6A030B21BA07F4FB"
  - apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
  - apt:
      name:
        - docker.io
        - kubelet
        - kubeadm
        - kubectl
        - redis-tools
        - jq
  - copy:
      src: daemon.json
      dest: /etc/docker/daemon.json
  - file:
      path: /etc/systemd/system/docker.service.d
      state: directory
  - systemd:
      name: docker
      state: restarted
      enabled: yes
      daemon_reload: yes
  - user:
      name: aviadmin
      groups: docker
  - service:
      name: kubelet
      state: started
      enabled: true
  - copy:
      src: kubeadm.yaml
      dest: /tmp/kubeadm.yaml
  - shell: kubeadm init --config=/tmp/kubeadm.yaml
    register: kubeadm_init
  - file:
      path: /home/aviadmin/.kube
      state: directory
  - copy:
      remote_src: yes
      src: /etc/kubernetes/admin.conf
      dest: "/home/{{ item }}/.kube/config"
      owner: "{{ item }}"
      group: "{{ item }}"
    loop:
      - ubuntu
      - aviadmin
  - shell: kubectl --kubeconfig /etc/kubernetes/admin.conf create -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    register: kubeadm_network
  - shell: kubeadm token list | grep authentication | cut -d' ' -f1
    register: kubeadm_token
  - shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
    register: kubeadm_hash
  - shell: "redis-cli -h jumpbox.student.lab hset {{ inventory_hostname }} kubeadm_token {{ kubeadm_token.stdout }}"
    register: redis_kubeadm_token
  - shell: "redis-cli -h jumpbox.student.lab hset {{ inventory_hostname }} kubeadm_hash {{ kubeadm_hash.stdout }}"
    register: redis_kubeadm_hash
  when: kubeadm_config.rc > 0
- shell: kubectl --kubeconfig /etc/kubernetes/admin.conf get serviceaccount | grep avi
  register: kubectl_serviceaccount
  ignore_errors: yes
  changed_when: "kubectl_serviceaccount.rc != 0"
- block:
  - shell: kubectl --kubeconfig /etc/kubernetes/admin.conf create serviceaccount avi -n default
  - copy:
      src: clusterrole.json
      dest: /home/aviadmin/clusterrole.json
  - copy:
      src: clusterbinding.json
      dest: /home/aviadmin/clusterbinding.json
  - shell: kubectl --kubeconfig /etc/kubernetes/admin.conf create -f /home/aviadmin/clusterrole.json
  - shell: kubectl --kubeconfig /etc/kubernetes/admin.conf create -f /home/aviadmin/clusterbinding.json
  - shell: kubectl --kubeconfig /etc/kubernetes/admin.conf get secret | grep avi-token | cut -d' ' -f1
    register: avi_token_name
  - shell: "kubectl --kubeconfig /etc/kubernetes/admin.conf get secret {{ avi_token_name.stdout }} -o=jsonpath='{.data.token}' |  base64 --decode"
    register: avi_token
  - shell: "redis-cli -h jumpbox.student.lab hset {{ inventory_hostname }} avi_token {{ avi_token.stdout }}"
    register: redis_avi_token
  when: kubectl_serviceaccount.rc > 0