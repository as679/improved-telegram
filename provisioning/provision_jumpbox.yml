---
- hosts: all
  gather_facts: false
  become: true
  tasks:
  - apt_repository:
      repo: ppa:ansible/ansible
  - apt:
      name:
        - redis-server
        - python-psutil
        - python3-pip
        - python3-redis
        - ansible
        - dnsmasq
        - nginx
        - jq
  - pip:
      name:
        - pip
        - avisdk
        - boto3
        - ansible-runner
      extra_args: --upgrade
  - shell: "sudo -u {{ item }} -H ansible-galaxy install avinetworks.avisdk avinetworks.aviconfig"
    loop:
      - ubuntu
      - aviadmin
  - file:
      name: /usr/bin/python
      state: absent
  - file:
      dest: /usr/bin/python
      src: /usr/bin/python3.6
      state: link
  - file:
      path: /root/.ssh
      state: directory
      mode: '0600'
  - copy:
      src: ../keys/generated-access-key.pem
      dest: "/home/{{ item }}/.ssh/id_rsa"
      owner: "{{ item }}"
      group: "{{ item }}"
      mode: '0600'
    loop:
      - ubuntu
      - aviadmin
  - copy:
      src: ../keys/generated-access-key.pem
      dest: /root/.ssh/id_rsa
      owner: root
      group: root
      mode: '0600'
  - lineinfile:
      dest: /etc/redis/redis.conf
      state: absent
      regexp: '^bind 127.0.0.1 ::1$'
  - replace:
      dest: /etc/redis/redis.conf
      regexp: '^(protected-mode) yes$'
      replace: '\1 no'
  - systemd:
      name: redis
      state: restarted
  - systemd:
      name: nginx
      state: restarted
  - copy:
      src: ../provisioning/handle_register.py
      dest: /usr/local/bin/handle_register.py
  - copy:
      src: ../provisioning/handle_register.service
      dest: /etc/systemd/system/handle_register.service
  - systemd:
      state: restarted
      daemon_reload: yes
      name: handle_register
  - copy:
      src: ../provisioning/handle_bootstrap.py
      dest: /usr/local/bin/handle_bootstrap.py
  - copy:
      src: ../provisioning/handle_bootstrap.service
      dest: /etc/systemd/system/handle_bootstrap.service
  - systemd:
      state: restarted
      daemon_reload: yes
      name: handle_bootstrap
  - copy:
      src: ../provisioning/ansible_inventory.py
      dest: /etc/ansible/hosts
      mode: 0755
  - replace:
      path: /etc/ansible/ansible.cfg
      regexp: '^#(host_key_checking = False)$'
      replace: '\1'
  - file:
      path: /opt/bootstrap
      state: directory
      group: ubuntu
      mode: '0775'
  - copy:
      src: ../provisioning/bootstrap/
      dest: /opt/bootstrap/
  - replace:
      path: /etc/dnsmasq.conf
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    loop:
      - { regexp: '^#(no-resolv)$', replace: '\1' }
      - { regexp: '^#(server)=/localnet/192.168.0.1$', replace: '\1=8.8.8.8' }
      - { regexp: '^#(local)=/localnet/$', replace: '\1=/lab/' }
  - systemd:
      state: restarted
      name: dnsmasq
  - systemd:
      name: systemd-resolved
      state: stopped
      enabled: no
  - file:
      path: /etc/resolv.conf
      state: absent
  - copy:
      src: ../provisioning/resolv.conf
      dest: /etc/resolv.conf
  - copy:
      src: ../provisioning/register.py
      dest: /usr/local/bin/register.py
      mode: 0755
  - copy:
      src: ../provisioning/register.py
      dest: /var/www/html/register.py
      mode: 0755
  - shell: /usr/local/bin/register.py 127.0.0.1
    register: register
